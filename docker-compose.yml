version: '3'
services:
  cassandra:
    container_name: cassandra
    image: cassandra:latest
    ports:
      - "9042:9042"
    volumes:
      - ./data/cassandra:/var/lib/cassandra
    networks:
      - FDSnet
    healthcheck:
      test:
        [
          "CMD",
          "cqlsh",
          "-u",
          "cassandra",
          "-p",
          "cassandra",
          "-e",
          "describe cluster"
        ]
      interval: 30s
      timeout: 10s
      retries: 5
    mem_limit: 10g
    restart: unless-stopped

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - FDSnet
    restart: unless-stopped

  dataloader:
    container_name: dataloader
    build:
      context: ./dataloader
      dockerfile: Dockerfile
    environment:
      - DROP_DB=true
    depends_on:
      cassandra:
        condition: service_healthy
    networks:
      - FDSnet

  sasmock:
    container_name: sasmock
    build:
      context: ./sasmock
      dockerfile: Dockerfile
    depends_on:
      dataloader:
        condition: service_completed_successfully
    ports:
      - "8000:8000"
    networks:
      - FDSnet
    restart: unless-stopped

  fca-engine:
    container_name: fca-engine
    build: ./fca
    ports:
      - "8005:8005"
    depends_on:
      - cassandra
      - redis
      - dataloader
      - sasmock
    networks:
      - FDSnet
    restart: unless-stopped

  orq:
    container_name: orq
    build:
      context: ./orq
      dockerfile: Dockerfile
    depends_on:
      dataloader:
        condition: service_completed_successfully
    ports:
      - "8010:8010"
    networks:
      - FDSnet
    restart: unless-stopped

  ui:
    container_name: ui
    build: 
      context: ./front
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - FDSnet
    depends_on:
      - fca-engine
      - orq
    restart: unless-stopped
  
networks:
  FDSnet:
    driver: bridge
